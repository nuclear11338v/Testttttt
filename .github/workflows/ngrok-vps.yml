name: Ngrok VPS Setup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-ngrok:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 3: Install Ngrok
      - name: Install Ngrok
        run: |
          echo "Downloading Ngrok..."
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          tar -xvf ngrok-v3-stable-linux-amd64.tgz
          chmod +x ngrok
          mv ngrok /usr/local/bin/ngrok
          echo "Verifying Ngrok installation..."
          ngrok --version || { echo "Ngrok installation failed"; exit 1; }

      # Step 4: Start Ngrok with HTTP tunnel
      - name: Start Ngrok
        run: |
          echo "Reading secrets from config.py..."
          NGROK_AUTH_TOKEN=$(python -c "import config; print(config.NGROK_AUTH_TOKEN)")
          VPS_USERNAME=$(python -c "import config; print(config.VPS_USERNAME)")
          VPS_PASSWORD=$(python -c "import config; print(config.VPS_PASSWORD)")

          echo "Checking NGROK_AUTH_TOKEN..."
          if [ -z "$NGROK_AUTH_TOKEN" ]; then
            echo "Error: NGROK_AUTH_TOKEN is empty or not set"
            exit 1
          fi
          echo "NGROK_AUTH_TOKEN is set (masked for security): ${NGROK_AUTH_TOKEN:0:4}****"

          echo "Configuring Ngrok authtoken..."
          ngrok authtoken $NGROK_AUTH_TOKEN || { echo "Failed to set authtoken"; exit 1; }

          echo "Starting Ngrok tunnel for HTTP (port 80)..."
          ngrok http 80 --log=ngrok.log &

          echo "Waiting for Ngrok to initialize..."
          sleep 20

          echo "Checking Ngrok log file..."
          if [ ! -f ngrok.log ]; then
            echo "Error: ngrok.log not found"
            exit 1
          fi
          cat ngrok.log

          echo "Extracting Ngrok public URL..."
          NGROK_URL=$(grep -o "https://[^ ]*" ngrok.log | head -n 1)
          if [ -z "$NGROK_URL" ]; then
            echo "Error: Could not extract Ngrok URL"
            exit 1
          fi

          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
          echo "VPS_USERNAME=$VPS_USERNAME" >> $GITHUB_ENV
          echo "VPS_PASSWORD=$VPS_PASSWORD" >> $GITHUB_ENV

      # Step 5: Display credentials
      - name: Output VPS Credentials
        run: |
          echo "Ngrok HTTP URL: ${{ env.NGROK_URL }}"
          echo "Username: ${{ env.VPS_USERNAME }}"
          echo "Password: ${{ env.VPS_PASSWORD }}"
          echo "Note: This is an HTTP tunnel. To SSH, set up a proxy or use a tool like sshuttle."
